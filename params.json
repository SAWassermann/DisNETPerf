{"name":"Disnetperf","tagline":"DisNETPerf - a Distributed Internet Paths Performance Analyzer","body":"[![mPlane](http://www.ict-mplane.eu/sites/default/files//public/mplane_final_256x_0.png)](http://www.ict-mplane.eu/)\r\n\r\nDisNETPerf\r\n==============\r\nDisNETPerf - a Distributed Internet Paths Performance Analyzer - is a tool that allows one to locate the closest RIPE Atlas box (in terms of minimum RTT) to a given IP. You can either run DisNETPerf for a single IP or for a set of IPs.\r\n\r\nFurthermore, once the closest RIPE Atlas box has been located, DisNETPerf permits to launch traceroutes from this box to a destination IP address provided by the user.\r\n\r\nRIPE Atlas is a large active measurement network composed of geographically distributed probes used to measure Internet connectivity and reachability.\r\n\r\nGiven a certain server, with IP address IPs, and a target customer, with IP address IPd, DisNETPerf locates the closest RIPE Atlas probe to IPs, namely IPc, and periodically runs traceroute from IPc to IPd, collecting different path performance metrics such as RTT per hop, end-to-end RTT, etc. This data collected is then used to troubleshoot ''reverse'' paths, from the server to the target customer.\r\n\r\nTo select IPc, DisNETPerf makes use of a combined topological and latency-based approach, using standard pings and BGP routing tables. In a nutshell, it locates the RIPE Atlas probe with minimum RTT to the selected server IPs, among a set of prefiltered IPc candidates, which are located at either the same AS of IPs or in the neighbor ASes.\r\n\r\n#### List of runnable scripts\r\n\r\n- **find_psbox.py**: locate the closest boxes for a set of IPs\r\n \r\n- **launch_traceroutes.py**: launch traceroutes from RIPE Atlas boxes to a given destination IP address\r\n\r\n- **get_traceroute_results.py**: Retrieve the results of the launched traceroute-measurements\r\n\r\nAll the scripts whose names are prefixed with **AUX_** cannot be run but are used by the scripts explained above.\r\n\r\n#### Structure\r\n\r\nDisNETPerf is structured into 7 folders:\r\n- **contrib**: contains the RIPE Atlas Toolbox developed by **Pierdomenico Fiadino**. DisNETPerf heavily relies on this toolbox\r\n- **doc**: contains .txt-files explaining how to use DisNETPerf\r\n- **input**: should include the files used as input for DisNETPerf\r\n- **lib**: contains datasets needed in order to locate the closest RIPE Atlas boxes\r\n- **logs**: includes log-files\r\n- **output**: the result-files generated by DisNETPerf are saved into this folder\r\n- **scripts**: includes all the Python-scripts\r\n\r\nPrerequisites\r\n-------------\r\nTo run DisNETPerf, Python 2.7 must be installed. You can download Python 2.7 on <https://www.python.org/download/releases/2.7/>\r\nFurthermore, please fulfill all the prerequisites for the RIPE Atlas Toolbox explained on <https://github.com/pierdom/atlas-toolbox>\r\n\r\nDisNETPerf has partially been tested on Debian 7 with Python 2.7.3.\r\n\r\nAcknowledgement\r\n---------------\r\n\r\nThis work has been partially funded by the European Commission \r\nfunded mPlane ICT-318627 project (www.ict-mplane.eu).\r\n\r\nAuthor\r\n------\r\n\r\n* Main author: **Sarah Wassermann** -  <sarah.wassermann@student.ulg.ac.be> - <http://wassermann.lu>\r\n* Contributor: **Pierdomenico Fiadino** - <http://userver.ftw.at/~fiadino>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}